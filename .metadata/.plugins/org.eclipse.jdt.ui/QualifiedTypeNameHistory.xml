<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="com.account.AccountFun"/>
    <fullyQualifiedTypeName name="org.springframework.context.ConfigurableApplicationContext"/>
    <fullyQualifiedTypeName name="org.springframework.context.support.ClassPathXmlApplicationContext"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Qualifier"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.AnnotationConfigApplicationContext"/>
    <fullyQualifiedTypeName name="com.example.springcore.AppContext"/>
    <fullyQualifiedTypeName name="com.insuranceModel.FamilyFloater"/>
    <fullyQualifiedTypeName name="com.insuranceModel.IndividualInsurance"/>
    <fullyQualifiedTypeName name="com.service.InsuranceService"/>
    <fullyQualifiedTypeName name="javax.annotation.PostConstruct"/>
    <fullyQualifiedTypeName name="javax.annotation.PreDestroy"/>
    <fullyQualifiedTypeName name="com.examples.account.domain.Account"/>
    <fullyQualifiedTypeName name="com.examples.account.repository.InMemoryAccountRepository"/>
    <fullyQualifiedTypeName name="com.examples.account.service.TransferServiceImpl"/>
    <fullyQualifiedTypeName name="com.models.Welcome"/>
    <fullyQualifiedTypeName name="org.aspectj.lang.annotation.Aspect"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="org.aspectj.lang.annotation.Before"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.EnableAspectJAutoProxy"/>
    <fullyQualifiedTypeName name="org.aspectj.lang.annotation.After"/>
    <fullyQualifiedTypeName name="javax.annotation.Priority"/>
    <fullyQualifiedTypeName name="org.springframework.core.annotation.Order"/>
    <fullyQualifiedTypeName name="com.models.WelcomeImpl"/>
    <fullyQualifiedTypeName name="org.aspectj.lang.annotation.AfterReturning"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.ToString"/>
    <fullyQualifiedTypeName name="com.model.Employee"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Controller"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.util.matcher.AntPathRequestMatcher"/>
    <fullyQualifiedTypeName name="javax.sql.DataSource"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpMethod"/>
    <fullyQualifiedTypeName name="org.springframework.core.ParameterizedTypeReference"/>
    <fullyQualifiedTypeName name="com.service.AppDelegate"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.loadbalancer.LoadBalanced"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.ComponentScan"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.domain.EntityScan"/>
    <fullyQualifiedTypeName name="com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.hystrix.EnableHystrix"/>
    <fullyQualifiedTypeName name="java.lang.Thread"/>
    <fullyQualifiedTypeName name="com.netflix.hystrix.contrib.javanica.annotation.HystrixProperty"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.zuul.EnableZuulServer"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.zuul.EnableZuulProxy"/>
</qualifiedTypeNameHistroy>
